version: '3'
services:
  devops-project-db:
    image: mysql:latest
    container_name: devops-project-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: MyDB
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - mon_reseau
    restart: always

  springboot-app:
    image: chadha122/backdevops:tag  # Assurez-vous d'utiliser la bonne version de l'image
    container_name: springboot-app
    depends_on:
      - devops-project-db
    networks:
      - mon_reseau
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://devops-project-db:3306/MyDB?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - mon_reseau
    depends_on:
      - springboot-app

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - mon_reseau
    depends_on:
      - prometheus

  front-end:
    image: chadha122/angulardevops:tag  # Assurez-vous que l'image correcte est disponible sur Docker Hub
    container_name: front-end
    ports:
      - "80:80"
    depends_on:
      - springboot-app
    networks:
      - mon_reseau

  nginx-exporter:
    image: "nginx/nginx-prometheus-exporter:latest"
    container_name: nginx-exporter
    command: ["-nginx.scrape-uri=http://front-end:80/metrics"]
    ports:
      - "9113:9113"
    depends_on:
      - front-end
    networks:
      - mon_reseau

networks:
  mon_reseau:
    driver: bridge
